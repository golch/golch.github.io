<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>골치의 블로그</title>
    <description>개발자 골치의 블로그입니다. 주로 웹기술 관련 내용을 다룹니다.
</description>
    <link>http://golch.gitub.io/</link>
    <atom:link href="http://golch.gitub.io/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Tue, 02 May 2017 17:11:20 +0900</pubDate>
    <lastBuildDate>Tue, 02 May 2017 17:11:20 +0900</lastBuildDate>
    <generator>Jekyll v3.2.1</generator>
    
      <item>
        <title>DOM templating (번역)</title>
        <description>&lt;p&gt;원문보기 : &lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/dom-template&quot;&gt;https://www.polymer-project.org/2.0/docs/devguide/dom-template&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;수많은 엘리먼트는 그들의 기능을 수행하기 위해서 DOM 엘리먼트의 subtree를 사용한다. DOM templating은 당신의 엘리먼트를 위한 DOM subtree를 만드는 쉬운 방법을 제공한다.&lt;/p&gt;

&lt;p&gt;기본적으로, 엘리먼트에 DOM template를 추가하는 것은 Polymer가 엘리먼트를 위한 shadow root를 생성하고 template을 shadow tree에 복제하는 것을 초래한다.&lt;/p&gt;

&lt;p&gt;DOM template은 또한 데이터 바인딩과 명시적인 이벤트 핸들러를 사용가능하도록 한다.&lt;/p&gt;

&lt;h1 id=&quot;dom-template-&quot;&gt;DOM template 개요&lt;/h1&gt;

&lt;p&gt;엘리먼트의 DOM template을 명시하기 위해서 :&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;엘리먼트의 name과 매칭되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; 애트리뷰트가 포함된 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;dom-module&amp;gt;&lt;/code&gt; 엘리먼트를 생성하라.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;dom-module&amp;gt;&lt;/code&gt; 내부에 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;template&amp;gt;&lt;/code&gt; 엘리먼트를 생성하라.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Polymer는 이 template의 콘텐츠를 엘리먼트의 local DOM에 복제한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Example :&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x-foo&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;I am x-foo!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XFoo&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'x-foo'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;XFoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;XFoo&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이 예제에서, 엘리먼트를 정의하는 DOM template 과 JavaScript는 동일한 파일 안에 있다. 당신은 엘리먼트가 정의되기 이전에 DOM template이 파싱 될 때에만, 이 부분을 다른 파일로 분리할 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; 엘리먼트는 테스팅을 위한 경우가 아니라면, 일반적으로 메인 문서(document) 바깥쪽에서 정의되어야 한다. 메인 문서 내에서 엘리먼트를 정의하는 것에 관한 경고들을 보려면, &lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/registering-elements#main-document-definitions&quot;&gt;main document definitions&lt;/a&gt;를 참고하라.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h1 id=&quot;automatic-node-finding&quot;&gt;자동 노드 찾기 (Automatic node finding)&lt;/h1&gt;

&lt;p&gt;Polymer는 엘리먼트가 DOM template을 초기화할 때 노드 ID의 정적인 지도를 만든다. 이는 자주 사용하는 노드에 수동으로 쿼리할 필요 없이 편안하게 접근하기 위해서이다. &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt;가 있는 엘리먼트 template에 명시된 어떤 노드라도 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.$&lt;/code&gt; hash에 &lt;code class=&quot;highlighter-rouge&quot;&gt;id&lt;/code&gt; 에 의해서 저장된다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt;  (&lt;code class=&quot;highlighter-rouge&quot;&gt;dom-repeat&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;dom-if&lt;/code&gt; 템플릿을 포함한) 데이터 바인딩을 사용해서 동적으로 생성된 노드는 &lt;code class=&quot;highlighter-rouge&quot;&gt;this.$&lt;/code&gt; hash에 추가되지 않는다. 해시는 오직 &lt;em&gt;정적으로&lt;/em&gt; 생성된 local DOM 노드만을 포함한다(결국, 엘리먼트의 가장 바깥쪽 template에서 정의된 노드를 말한다).&lt;/p&gt;

  &lt;p&gt;&lt;strong&gt;Example :&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;x-custom&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    Hello World from &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/span&amp;gt;&lt;/span&gt;!
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;MyElement&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;  &lt;span class=&quot;s1&quot;&gt;'x-custom'&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ready&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;tagName&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;당신의 엘리먼트의 shadow DOM에 동적으로 생성된 노드를 위치시키기 위해서, 표준(standard) DOM인 &lt;code class=&quot;highlighter-rouge&quot;&gt;querySelector&lt;/code&gt; 메서드를 사용하라.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;shadowRoot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;querySelector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;selector&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

</description>
        <pubDate>Thu, 20 Apr 2017 12:10:20 +0900</pubDate>
        <link>http://golch.gitub.io/polymer/2017/04/20/DOM-templating.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/polymer/2017/04/20/DOM-templating.html</guid>
        
        
        <category>polymer</category>
        
      </item>
    
      <item>
        <title>Shadow DOM concepts (번역)</title>
        <description>&lt;p&gt;원문보기 : &lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/shadow-dom&quot;&gt;https://www.polymer-project.org/2.0/docs/devguide/shadow-dom&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Shadow DOM은 컴포넌트를 만들도록 도와주는 새로운 DOM 기능이다. 당신은 shadow DOM을 element 내부의 &lt;strong&gt;범위가 지정된 하위트리&lt;/strong&gt; 라고 생각해도 된다.&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;웹 기초에 관해 더 읽어보기.&lt;/strong&gt; 이 문서는 polymer와 연관된 shadow DOM의 개요를 보여준다. Shadow DOM의 더 심화된 개요가 궁금하다면, 웹 기초에 관한 다음 링크를 읽어보라. &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/shadowdom?hl=en&quot;&gt;Shadow DOM v1: self-contained web components&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;페이지 제목과 메뉴 버튼을 포함하고 있는 header 컴포넌트를 생각해보자 : 이 element의 DOM tree는 아마 아래와 같이 생겼을 것이다.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;my-header&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Shadow DOM은 범위가 지정된 하위트리에서 당신이 자식(children)을 위치시킬 수 있도록 해준다. 그래서 문서레벨의 CSS는 임의로 버튼의 스타일을 변경할 수 없다. 이 하위트리는 shadow tree라고 불린다.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;my-header&amp;gt;&lt;/span&gt;
  #shadow-root
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;em&gt;shadow root&lt;/em&gt; 는 shadow tree의 최상단이다. Tree가 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;my-header&amp;gt;&lt;/code&gt;에 붙은 element를 &lt;em&gt;shadow host&lt;/em&gt;라고 부른다. 이 host는 &lt;code class=&quot;highlighter-rouge&quot;&gt;shadowRoot&lt;/code&gt;라고 불리는 property를 갖는데, 이것은 shadow root를 참조한다. Shadow root는 그 host element로 식별되는 &lt;code class=&quot;highlighter-rouge&quot;&gt;host&lt;/code&gt; property를 가진다.&lt;/p&gt;

&lt;p&gt;Shadow tree는 그 element의 &lt;code class=&quot;highlighter-rouge&quot;&gt;children&lt;/code&gt;과는 분리되어 있다. 당신은 이 shadow tree를 외부 element는 알 필요가 없는, 컴포넌트 &lt;strong&gt;실행(implementation)&lt;/strong&gt;의 일부분으로 생각할 수도 있다. Element의 자식(children)은 그것의 공개 인터페이스(public interface)의 일부분이다.&lt;/p&gt;

&lt;p&gt;당신은 부득이하게 &lt;code class=&quot;highlighter-rouge&quot;&gt;attachShadow&lt;/code&gt;를 호출함으로서 shadow tree를 element에 추가할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;var div = document.createElement('div');
var shadowRoot = div.attachShadow({mode: 'open'});
shadowRoot.innerHTML = '&lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Hello Shadow DOM&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;';
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Polymer는 &lt;code class=&quot;highlighter-rouge&quot;&gt;DOM template&lt;/code&gt;을 이용해서 shadow tree를 추가하는데 선언적인 메커니즘을 제공한다. 당신이 element를 위해서 DOM template을 제공할 때, Polymer는 각각의 element instance 에 shadow root를 붙이고 template 콘텐츠를 shadow tree로 복사한다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;my-header&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;I'm a header&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Menu&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Template이 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;style&amp;gt;&lt;/code&gt; element를 포함한다는 것을 알아두라. Shadow tree에 위치한 CSS는 해당 shadow tree안에서만 유효하다. 그리고 다른 DOM에는 영향을 미치지 않는다.&lt;/p&gt;

&lt;h1 id=&quot;shadow-dom---shadow-dom-and-composition&quot;&gt;Shadow DOM 의 구성 (Shadow DOM and composition)&lt;/h1&gt;

&lt;p&gt;만일 element가 shadow DOM을 가지고 있다면, 기본적으로 &lt;strong&gt;shadow tree는 그 element의 자식(children)대신에 그려진다.&lt;/strong&gt; 자식이 그려지도록 하기 위해서, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element를 shadow tree에 추가한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;slot&amp;gt;&lt;/code&gt;은 child node 가 어디에 그려질 것인지를 보여주는 placeholder라고 생각하라. 아래 ‘&lt;my-header&gt;' 의 shadow tree를 생각해보자:&lt;/my-header&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Menu&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;사용자는 이렇게 자식을 추가할 수 있다:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;my-header&amp;gt;&lt;/span&gt;Shadow DOM&lt;span class=&quot;nt&quot;&gt;&amp;lt;/my-header&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;
&lt;p&gt;header는 마치 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element가 자식으로 대체된 것처럼 그려진다:&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;my-header&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;header&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;h1&amp;gt;&lt;/span&gt;Shadow DOM&lt;span class=&quot;nt&quot;&gt;&amp;lt;/h1&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;button&amp;gt;&lt;/span&gt;Menu&lt;span class=&quot;nt&quot;&gt;&amp;lt;/button&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/header&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/my-header&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;Element의 진짜 자손 tree는 shadow DOM tree와는 대조적으로, 때때로 그것의 light DOM을 호출한다.&lt;/p&gt;

&lt;p&gt;Light DOM과 shadow DOM을 그리기 위해서(for rendering) 하나의 tree로 만드는 과정을 &lt;em&gt;flattening&lt;/em&gt; tree 라고 부른다. &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element가 그려지지 않는 동안, flattened tree에 포함되고, 예를들어 event bubbling의 일부가 될 수 있다.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고(번역자 추가) : &lt;strong&gt;Event Bubbling이란?&lt;/strong&gt;
계층적 구조의 DOM에서 특정 엘리먼트에 이벤트가 발생할 경우, 연쇄적인 반응이 일어나는데 이를 이벤트 전파라고 한다. 이벤트 대상 엘리먼트를 시작으로 최하위 엘리먼트까지 이벤트가 전파되는 것을 캡쳐링이라고 하고, 반대로 최상위 엘리먼트에서 대상 엘리먼트까지 이벤트가 전파되는 것을 버블링이라 한다.(출처 : http://blog.jui.io/?p=33)&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;당신은 &lt;strong&gt;slots&lt;/strong&gt;라는 것을 이용해서 자식이 flattened tree의 어디로 가야하는지를 조작할 수 있다.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&amp;lt;slot&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/slot&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이름 붙여진 slot은 같은 이름의 slot attribute가 있는 최상위 자식에서만 허용된다.&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;A heading&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;name&lt;/code&gt; attribute가 없는 slot은 &lt;code class=&quot;highlighter-rouge&quot;&gt;slot&lt;/code&gt; attribute가 없는 모든 자식에서 기본 slot처럼 쓰인다. 만일 자식의 &lt;code class=&quot;highlighter-rouge&quot;&gt;slot&lt;/code&gt; attribute가 shadow tree의 어떤 slot name과도 일치하지 않는다면, 그 element는 전혀 그려지지 않는다.&lt;/p&gt;

&lt;p&gt;예를들어, 아래 shadow tree의 &lt;code class=&quot;highlighter-rouge&quot;&gt;example-card&lt;/code&gt; element를 보자 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;h2&amp;gt;&amp;lt;slot&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;name=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/slot&amp;gt;&amp;lt;/h2&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;만일 example card가 이렇게 사용된다면 :&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Card Title&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    Some text for the body of the card.
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;footer&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;This footer doesn't show up.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/example-card&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;첫번째 span은 &lt;code class=&quot;highlighter-rouge&quot;&gt;title&lt;/code&gt; slot에 할당되었다. &lt;code class=&quot;highlighter-rouge&quot;&gt;slot&lt;/code&gt; attribute를 가지지 않은 div는 default slot에 할당되었다. slot name이 있지만 shadow tree에는 없는 마지막 span은 flattened tree에 보이지 않고, 그려지지 않는다.&lt;/p&gt;

&lt;p&gt;오직 최상위 자식만이 slot과 일치할 수 있다는 것을 알아두자. 아래 예제를 보라 :&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
   &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;title&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Am I a title?&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
    Some body text.
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/example-card&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/code&gt;는 두 개의 최상위 자식(&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;)을 가진다. 둘다 default slot에 할당된다. span 의 &lt;code class=&quot;highlighter-rouge&quot;&gt;slot&lt;/code&gt; attribute는 아무런 영향을 미치지 못하는데, span이 최상위 자식이 아니기 때문이다.&lt;/p&gt;

&lt;h2 id=&quot;fallback-content&quot;&gt;Fallback content&lt;/h2&gt;

&lt;p&gt;slot은 &lt;em&gt;fallback content&lt;/em&gt; 를 포함할 수 있다. Fallback content는 slot에 아무것도 할당되지 않았을 때 보여지는 것을 말한다. 예를들어 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;fancy-note&amp;gt;&lt;/span&gt;
  #shadow-root
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;slot&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;icon&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;note.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fancy-note&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;사용자는 element를 위해서 자신의 아이콘을 이렇게 공급할 수 있다 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- shows note with warning icon --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;fancy-note&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;slot=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;icon&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;warning.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  Do not operate heavy equipment while coding.

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fancy-note&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;만일 사용자가 아이콘을 빠뜨렸다면, fallback content가 기본 아이콘을 제공한다 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- shows note with default icon --&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;fancy-note&amp;gt;&lt;/span&gt;

  Please code responsibly.

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/fancy-note&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;multi-level-distribution&quot;&gt;Multi-level distribution&lt;/h2&gt;

&lt;p&gt;slot element가 slot에 할당되기도 한다. 예를들어 2 계층의 shadow tree를 생각해보자.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent-element&amp;gt;&lt;/span&gt;
  #shadow-root
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;child-element&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- parent-element renders its light DOM children inside
           child-element --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;slot&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;parent-slot&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;child-element&amp;gt;&lt;/span&gt;
  #shadow-root
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- child-element renders its light DOM children inside this div --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;slot&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;child-slot&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;주어진 마크업은 아래와 같다 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent-element&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;I'm light DOM&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/parent-element&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;flattened tree는 아래와 같이 생겼을 것이다 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent-element&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;child-element&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;slot&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;child-slot&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;slot&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;parent-slot&amp;gt;
          &amp;lt;span&amp;gt;I'm in light DOM&amp;lt;/span&amp;gt;
&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;처음에는 이렇게 배치되는 것이 약간 혼란스러울 수 있다. 각각의 계층에서 light DOM children은 host의 shadow DOM의 slot에 할당된다. span(“I’m light DOM”) 은 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;parent-element&amp;gt;&lt;/code&gt; 의 shadow DOM 내부의 &lt;code class=&quot;highlighter-rouge&quot;&gt;#parent-slot&lt;/code&gt;에 할당된다. 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;#parent-slot&lt;/code&gt;은 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;child-element&amp;gt;&lt;/code&gt;의 shadow DOM 내부의 &lt;code class=&quot;highlighter-rouge&quot;&gt;#child-slot&lt;/code&gt;에 할당된다.&lt;/p&gt;

&lt;p&gt;slot element가 그려지지 않으면 rendered tree는 훨씬 간단해진다 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;parent-element&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;child-element&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&lt;/span&gt;I'm in light DOM&lt;span class=&quot;nt&quot;&gt;&amp;lt;/span&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;특정 언어에서, 하나의 slot이라도 그 assigned nodes 혹은 fallback content에 의해서 대체되었다면, slot의 &lt;em&gt;distributed nodes&lt;/em&gt;는 곧 assigned nodes이다. 따라서 예제에서, &lt;code class=&quot;highlighter-rouge&quot;&gt;#child-slot&lt;/code&gt;은 하나의 distributed node(span)를 갖는다. 당신은 distributed nodes를 &lt;em&gt;rendered tree에서 slot의 자리를 차지하는 node의 리스트&lt;/em&gt;로 생각할 수 있다.&lt;/p&gt;

&lt;h2 id=&quot;slot-apis&quot;&gt;Slot APIs&lt;/h2&gt;

&lt;p&gt;Shadow DOM은 distribution을 체크하기 위한 몇 가지 새로운 API를 제공한다:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTMLElement.assignedSlot&lt;/code&gt; 프로퍼티는 element를 위한 assigned slot을 주거나, element가 slot에 할당되지 않으면 &lt;code class=&quot;highlighter-rouge&quot;&gt;null&lt;/code&gt;을 준다 .&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;HTMLSlotElement.assignedNodes&lt;/code&gt; 메서드는 주어진 slot과 연관된 node의 목록을 리턴한다. &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;flatten:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;err&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt; 옵션과 함께 호출되면, slot의 &lt;em&gt;distributed nodes&lt;/em&gt;를 리턴한다.&lt;/li&gt;
  &lt;li&gt;HTMLSlotElement.slotchange 이벤트는 slot의 distributed nodes가 변경될 때 죽는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;더 자세한 내용을 보려면 웹 기초의 &lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/shadowdom/?hl=en#workwithslots&quot;&gt;Working with slots in JS&lt;/a&gt; 링크를 보라.&lt;/p&gt;

&lt;h2 id=&quot;observe-added-and-removed-children&quot;&gt;추가되거나 제거된 자식 관찰 (Observe added and removed children)&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Polymer.FlattenedNodesObserver&lt;/code&gt; 클래스는 element의 &lt;em&gt;flattened tree&lt;/em&gt;를 추적하기 위한 유틸리티를 제공한다. 어떤 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;slot&amp;gt;&lt;/code&gt; element가 distributed node에 의해서 대체되었다면, 이는 child nodes의 목록이다. &lt;code class=&quot;highlighter-rouge&quot;&gt;FlattenedNodesObserver&lt;/code&gt;는 &lt;code class=&quot;highlighter-rouge&quot;&gt;lib/utils/flattened-nodes-observer.html&lt;/code&gt;로부터 로드될 수 있는 추가적인 유틸리티이다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/bower_components/polymer/lib/utils/flattened-nodes-observer.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;Polymer.FlattenedNodesObserver.getFlattenedNodes(node)&lt;/code&gt; 는 특정 노드의 flattened node 목록을 리턴한다.&lt;/p&gt;

&lt;p&gt;언제 flattened node list가 변경되었는지를 추적하려면 &lt;code class=&quot;highlighter-rouge&quot;&gt;Polymer.FlattenedNodesObserver&lt;/code&gt; 클래스를 사용하라.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_observer&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FlattenedNodesObserver&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;slot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_processNewNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addedNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_processRemovedNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;removedNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;당신은 노드가 추가되거나 제거될 때 호출되는 콜백인 &lt;code class=&quot;highlighter-rouge&quot;&gt;FlattenedNodesObserver&lt;/code&gt; 을 보았다. 이 콜백은 &lt;code class=&quot;highlighter-rouge&quot;&gt;addedNodes&lt;/code&gt;와 &lt;code class=&quot;highlighter-rouge&quot;&gt;removedNodes&lt;/code&gt;와 함께 하나의 오브젝트 인자를 갖는다.&lt;/p&gt;

&lt;p&gt;이 메서드는 관찰하는 것을 중지할 수 있는 핸들을 리턴한다.&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;_observer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;disconnect&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;FlattenedNodesObserver&lt;/code&gt;에 관한 몇 가지 알아둘 점 :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;콜백 인자(argument)는 element 뿐 아니라 추가되거나 제거된 노드까지 나열한다. 만일 element만 보고 싶다면 노드 목록을 필터할 수 있다 :&lt;/p&gt;

    &lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nx&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;addedNodes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;nodeType&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;===&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Node&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ELEMENT_NODE&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;옵저버(observer) 핸들은 또한 unit test를 위해 사용될 수 있는 &lt;code class=&quot;highlighter-rouge&quot;&gt;flush&lt;/code&gt; 메서드를 제공한다.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;event-retargeting&quot;&gt;Event retargeting&lt;/h1&gt;

&lt;p&gt;캡슐화 되어있는 shadow tree를 지키기 위해서, 몇몇 이벤트는 shadow DOM 범위 안에서 중지된다.&lt;/p&gt;

&lt;p&gt;다른 버블링 이벤트는 tree를 타고 올라오면서 재타겟팅 된다. 재타겟팅은 이벤트의 타겟을 조정해서 마치 리스닝 element처럼 그것이 같은 범위에서 element를 대표하도록 한다.&lt;/p&gt;

&lt;p&gt;예를들어 주어진 tree가 다음과 같다면 :&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/span&gt;
  #shadow-root
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;fancy-button&amp;gt;&lt;/span&gt;
        #shadow-root
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;만약 유저가 이미지 element를 클릭하면, 클릭이벤트는 tree를 타고 위로 올라간다(bubble up) :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;이미지 element의 리스너 자신은 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt;를 타겟으로 받는다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;fancy-button&amp;gt;&lt;/code&gt;의 리스너는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;fancy-button&amp;gt;&lt;/code&gt;을 타겟으로 받는다. 왜냐하면 원래 타겟은 그 shadow root 내부에 있기 때문이다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/code&gt;의 shadow DOM 내의 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 리스너 역시 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;fancy-button&amp;gt;&lt;/code&gt; 을 타겟으로 받는다. 왜냐하면 그들은 같은 shadow DOM tree에 있기 때문이다.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/code&gt;의 리스너는 자기자신을 타겟으로 받는다.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;이벤트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;composedPath&lt;/code&gt; 메서드를 제공한다. 이 메서드는 이벤트가 지나갈 nodes 배열을 리턴한다. 이 경우에, 배열은 다음을 포함한다 :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;img&amp;gt;&lt;/code&gt; element 자신&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;fancy-button&amp;gt;&lt;/code&gt;의 shadow root&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; element&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/code&gt;의 shadow root&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;example-card&amp;gt;&lt;/code&gt; 의 조상(예를들어, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;body&amp;gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;document&lt;/code&gt;, &lt;code class=&quot;highlighter-rouge&quot;&gt;window&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;기본적으로, 커스텀 이벤트는 shadow DOM 바운더리를 통해서 전파되지 &lt;strong&gt;않는다&lt;/strong&gt;. 이를 허용하고 재타겟팅 하기 위해서는 반드시 &lt;code class=&quot;highlighter-rouge&quot;&gt;composed&lt;/code&gt; 플래그를 &lt;code class=&quot;highlighter-rouge&quot;&gt;true&lt;/code&gt;로 셋팅해야 한다 :&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;event&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CustomEvent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'my-event'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;bubbles&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;composed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;shadow tree 이벤트의 더 많은 정보를 원한다면 shadow DOM의 웹 기초 아티클인 &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/shadowdom#events&quot;&gt;The Shadow DOM event model&lt;/a&gt; 를 참고하자.&lt;/p&gt;

&lt;h1 id=&quot;shadow-dom-styling&quot;&gt;Shadow DOM styling&lt;/h1&gt;

&lt;p&gt;Shadow tree 내부의 스타일은 해당 shadow tree 범위로 한정된다. 그리고 밖에있는 element에 영향을 미치지 않는다. Shadow tree 외부의 스타일 역시 안쪽의 식별자와는 매칭되지 않는다. 그러나 &lt;code class=&quot;highlighter-rouge&quot;&gt;color&lt;/code&gt;와 같은 상속가능한 스타일 프로퍼티는 여전히 상속되어 내려갈 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;body&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;nc&quot;&gt;.test&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;styled-element&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nf&quot;&gt;#shadow-root&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;style&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;class=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;test&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;Test&lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이 예제에서 비록 &lt;code class=&quot;highlighter-rouge&quot;&gt;div&lt;/code&gt; 식별자가 &lt;code class=&quot;highlighter-rouge&quot;&gt;.test&lt;/code&gt; 식별자보다 메인 문서에서 덜 확정적이라고 하더라도, &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;는 파란 배경색을 갖는다. 왜냐하면 메인 문서의 shadow DOM에는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 가 전혀 들어있지 않기 때문이다. 반대로 body 내의 글자색(white)은 아래 레벨인 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;styled-element&amp;gt;&lt;/code&gt;와 그 shadow root로 상속된다.&lt;/p&gt;

&lt;p&gt;shadow tree내부의 스타일이 외부와 일치하는 한가지 사례가 있다. &lt;code class=&quot;highlighter-rouge&quot;&gt;:host&lt;/code&gt; 혹은 &lt;code class=&quot;highlighter-rouge&quot;&gt;:host()&lt;/code&gt; 가짜클래스(pseudoclass)를 이용하면 스타일을 host element로 정의할 수 있다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;#shadow-root
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* custom elements default to display: inline */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;:host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* set a special background when the host element
       has the .warning class */&lt;/span&gt;
    &lt;span class=&quot;nd&quot;&gt;:host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;.warning&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;당신은 또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;::slotted()&lt;/code&gt;를 사용해서 slot에 할당된 light DOM children에도 스타일을 줄 수 있다. 예를들어, &lt;code class=&quot;highlighter-rouge&quot;&gt;::slotted(img)&lt;/code&gt; 는 shadow tree에서 slot에 할당된 어떤 이미지 태그를 선택한다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;  #shadow-root
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nd&quot;&gt;:slotted&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;img&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;100%&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;더 많은 정보를 위해서, shadow DOM의 웹 기초 아티클인 &lt;a href=&quot;https://developers.google.com/web/fundamentals/getting-started/primers/shadowdom#styling&quot;&gt;Styling&lt;/a&gt;을 참고하라.&lt;/p&gt;

&lt;h1 id=&quot;theming--and-custom-properties&quot;&gt;Theming(테마 정하기) and custom properties&lt;/h1&gt;

&lt;p&gt;당신은 shadow tree &lt;strong&gt;외부의&lt;/strong&gt; CSS rule을 사용하는 것으로는 shadow tree의 어떤것에도 직접적으로 스타일을 줄 수 없다. 예외는 tree를 따라 상속되는 (color나 font 같은) CSS 프로퍼티이다. Shadow tree는 host로부터 CSS 프로퍼티를 상속한다.&lt;/p&gt;

&lt;p&gt;유저가 element를 커스텀하게 하려면, 당신은 CSS 커스텀 프로퍼티 및 믹스인을 사용해서 특정 스타일링 프로퍼티를 노출시켜야한다. 커스텀 프로퍼티는 스타일링 API를 element에 추가하는 방법을 제공한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Polyfill 제약사항&lt;/strong&gt;. 커스텀 프로퍼티나 믹스인의 polyfill 처리된 버전을 사용할 때, 당신이 알아야 할 수많은 제약사항이 있다. 자세한 것은 &lt;a href=&quot;https://github.com/webcomponents/shadycss/blob/master/README.md#limitations&quot;&gt;the Shady CSS README file&lt;/a&gt;을 참고하자.&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;참고 : Polyfill(번역자 추가)&lt;/p&gt;

  &lt;p&gt;폴리필이란? 폴리필(polyfill)은 개발자가 특정 기능이 지원되지 않는 브라우저를 위해 사용할 수 있는 코드 조각이나 플러그인을 말한다. 폴리필은 HTML5 및 CSS3와 오래된 브라우저 사이의 간격을 메꾸는 역할을 담당한다.&lt;/p&gt;

  &lt;p&gt;출처: &lt;a href=&quot;http://webdir.tistory.com/328&quot;&gt;http://webdir.tistory.com/328&lt;/a&gt; [WEBDIR]&lt;/p&gt;

&lt;/blockquote&gt;

&lt;p&gt;당신은 커스텀 프로퍼티를 CSS rule에 대체될 수 있는 변수라고 생각할 수도 있다 :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;:host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;--my-theme-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이것은 host의 background-color를 &lt;code class=&quot;highlighter-rouge&quot;&gt;--my-theme-color&lt;/code&gt; 커스텀 프로퍼티 값으로 셋팅한다. 누구든 당신의 element를 사용하는 사람은 프로퍼티를 더 높은 레벨에서 셋팅할 수 있다 :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;--my-theme-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;커스텀 프로퍼티는 tree 아래로 상속된다. 그래서 document 레벨로 셋팅된 값은 shadow tree 내부에서도 접근이 가능하다.&lt;/p&gt;

&lt;p&gt;이것은 프로퍼티가 셋팅되지 않을 때를 대비해서 기본값을 포함할 수 있다 :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;:host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;--my-theme-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;기본값은 심지어 다른 &lt;code class=&quot;highlighter-rouge&quot;&gt;var()&lt;/code&gt; 함수가 될수도 있다 :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--my-theme-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;var&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--another-theme-color&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;h2 id=&quot;custom-property-mixins&quot;&gt;Custom property mixins&lt;/h2&gt;

&lt;p&gt;커스텀 프로퍼티 &lt;em&gt;믹스인&lt;/em&gt;은 커스텀 프로퍼티 스펙의 상단에 만들어지는 기능이다. 기본적으로, 믹스인은 오브젝트 값을 갖는 커스텀 프로퍼티이다 :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;py&quot;&gt;--my-custom-mixin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;white&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;err&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;컴포넌트는 &lt;code class=&quot;highlighter-rouge&quot;&gt;@Apply&lt;/code&gt; rule을 이용해서 모든 rule 집합을 import하거나 &lt;em&gt;mix in&lt;/em&gt; 할 수 있다 :&lt;/p&gt;

&lt;div class=&quot;language-css highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nd&quot;&gt;:host&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;err&quot;&gt;@apply&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;--my-custom-mixin;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;@apply&lt;/code&gt; rule은 &lt;code class=&quot;highlighter-rouge&quot;&gt;--my-custom-mixin&lt;/code&gt; inline 콘텐츠를 추가함으로써 그것이 사용된 곳에서 동일한 효과를 갖는다.&lt;/p&gt;

&lt;h1 id=&quot;shadow-dom-polyfills&quot;&gt;Shadow DOM polyfills&lt;/h1&gt;

&lt;p&gt;Shadow DOM이 모든 플랫폼에서 사용 가능한 것이 아니기 때문에, Polymer는 만약 이것이 설치되어 있다면 shady DOM과 shady CSS polyfill의 이점을 택한다. 이 polyfill은 &lt;code class=&quot;highlighter-rouge&quot;&gt;webcomponents-lite.js&lt;/code&gt; polyfill bundle에 포함된다.&lt;/p&gt;

&lt;p&gt;이 polyfill은 좋은 퍼포먼스를 유지하면서 native shadow DOM의 합리적인 에뮬레이션을 제공한다. 그러나 완전히 polyfill될 수 없는 shadow DOM의 기능들이 있다. 만일 당신이 native shadow DOM을 포함하지 않는 브라우저를 지원한다면, 당신은 이 제한사항을 알고 있어야 한다. 또한 shady DOM으로 만들어진 어플리케이션을 디버깅할 때, shady DOM polyfill의 자세한 부분을 이해하는데도 도움이 된다.&lt;/p&gt;

&lt;h2 id=&quot;polyfill--&quot;&gt;Polyfill은 어떻게 동작하는가&lt;/h2&gt;

&lt;p&gt;polyfill은 shadow DOM을 에뮬레이트하는데 몇 가지 기술들의 조합을 이용한다 :&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Shady DOM. Shadow tree의 논리적인 구분과 그 자손 tree를 내부적으로 동일하게 하라. 그래서 정확하게 자식이 light DOM에 추가되거나 shadow DOM이 그려지도록 하라. native shadow DOM API가 에뮬레이트 되기 위해서 영향받는 element의 DOM API를 패치하라.&lt;/li&gt;
  &lt;li&gt;Shady CSS. shadow DOM 자식에 클래스를 추가하고 스타일 rule을 재작성함으로써 정확한 범위에 적용될 수 있도록 스타일 캡슐화를 제공하라.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아래 섹션은 각각의 polyfill에 관해서 더 깊이있게 논의한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shady DOM polyfill&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;native shadow DOM이 없는 브라우저는 오직 document와 그 자식 tree밖에 그리지 못한다.&lt;/p&gt;

&lt;p&gt;Shadow DOM의 flattened tree 그리는 것을 에뮬레이트 하기 위해서, shady DOM polyfill은 분리된 논리 tree와, 가상의 &lt;code class=&quot;highlighter-rouge&quot;&gt;children&lt;/code&gt;과 &lt;code class=&quot;highlighter-rouge&quot;&gt;shadowRoot&lt;/code&gt; 프로퍼티를 유지해야 한다. 각각의 host element의 실제 &lt;code class=&quot;highlighter-rouge&quot;&gt;children&lt;/code&gt; (브라우저에 보이는 자손 tree)은 shadow와 light DOM children의 pre-flattened tree이다. 당신이 개발자도구를 통해서 보는 tree는 logical tree가 아니고 rendered tree처럼 보인다.&lt;/p&gt;

&lt;p&gt;polyfill 아래에서, slot element는 tree의 브라우저 시점에는 나타나지 않는다. 따라서 native shadow DOM과는 다르게, slot은 이벤트 버블링의 일부가 되지 않는다.&lt;/p&gt;

&lt;p&gt;polyfill은 shadow DOM에 의해서 영향을 받는 node의 기존의 DOM API를 패치한다. 여기서 node는 shadow tree안에 있거나, shadow tree에 연결되었거나(hose), shadow host의 light DOM children 을 말한다. 예를들어, shadow root와 node의  &lt;code class=&quot;highlighter-rouge&quot;&gt;appendChild&lt;/code&gt; 를 호출할 때, polyfill은 light DOM children의 &lt;em&gt;가상의&lt;/em&gt; tree의 자식을 더하고, &lt;em&gt;rendered&lt;/em&gt; tree에서 자식이 어디 나타나야 하는지를 계산하고, 그리고 나서 정확한 장소의 실제 자손 tree에 더한다.&lt;/p&gt;

&lt;p&gt;더 많은 정보를 위해서, &lt;a href=&quot;https://github.com/webcomponents/shadydom/blob/master/README.md&quot;&gt;Shady DOM polyfill README&lt;/a&gt; 을 보라.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Shady CSS polyfill&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Shady CSS polyfill은 shadow DOM 스타일 캡슐화를 에뮬레이트 한다. 그리고 CSS 커스텀 프로퍼티 및 믹스인을 위한 에뮬레이션을 제공한다.&lt;/p&gt;

&lt;p&gt;캡슐화를 에뮬레이트 하기 위해서, shady CSS polyfill은 shady DOM tree 안에서 클래스를 element에 더한다. 또한 안에서 element의 템플릿으로 정의된 스타일 rule을 재작성한다.&lt;/p&gt;

&lt;p&gt;Shady CSS는 document-level 스타일시트에서 스타일 rule을 재작성하지 않는다. 이는 document-level 스타일이 shadow tree에 새어들어갈 수 있음을 의미한다. 그러나 그것은 element 외부에서 polyfilled style을 쓰기 위한 커스텀 element인 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;custom-style&amp;gt;&lt;/code&gt;을 제공한다. 이것은 커스텀 CSS 프로퍼티와 다시쓰는 rule에 대한 지원을 포함한다. 그래서 shadow tree로 새어나가지 않는다.&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;custom-style&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* Set CSS custom properties */&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;html&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;py&quot;&gt;--my-theme-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;blue&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;/* Document-level rules in a custom-style don't leak into shady DOM trees */&lt;/span&gt;
    &lt;span class=&quot;nc&quot;&gt;.warning&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;nl&quot;&gt;color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;red&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/custom-style&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;더 많은 정보를 위해서 &lt;a href=&quot;https://github.com/webcomponents/shadycss/blob/master/README.md&quot;&gt;Shady CSS polyfill README&lt;/a&gt;를 참고하라.&lt;/p&gt;

&lt;h2 id=&quot;resources&quot;&gt;Resources&lt;/h2&gt;

&lt;p&gt;더 읽을거리&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/primers/shadowdom/?hl=en&quot;&gt;Shadow DOM v1: self-contained web components&lt;/a&gt; on Web Fundamentals.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://www.w3.org/TR/css-variables-1/&quot;&gt;Custom properties specification&lt;/a&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://tabatkins.github.io/specs/css-apply-rule/&quot;&gt;Custom property mixins proposal&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/webcomponents/shadydom/blob/master/README.md&quot;&gt;Shady DOM polyfill README&lt;/a&gt;.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/webcomponents/shadycss/blob/master/README.md&quot;&gt;Shady CSS polyfill README&lt;/a&gt;.&lt;/li&gt;
&lt;/ul&gt;
</description>
        <pubDate>Tue, 18 Apr 2017 12:10:20 +0900</pubDate>
        <link>http://golch.gitub.io/polymer/2017/04/18/Shadow-DOM-concepts.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/polymer/2017/04/18/Shadow-DOM-concepts.html</guid>
        
        
        <category>polymer</category>
        
      </item>
    
      <item>
        <title>Quick tour of Polymer(번역)</title>
        <description>&lt;p&gt;이 문서는 개인 스터디 목적으로 아래 링크의 문서를 번역한 것입니다(&lt;del&gt;발번역…&lt;/del&gt;). 코드 동작을 직접 보고싶으신 분들은 아래 링크에서 확인하시기 바랍니다.
&lt;a href=&quot;https://www.polymer-project.org/2.0/start/quick-tour&quot;&gt;https://www.polymer-project.org/2.0/start/quick-tour&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;확실하게, Polymer 는 웹 컴포넌트 만드는 것을 간단하게 해준다.&lt;/p&gt;

&lt;p&gt;Custom element는 boilerplate 코드를 줄이고, 복잡하고 상호작용하는 element 제작을 훨씬 쉽게 만들어주는 Polymer의 특별한 기능들에 이점을 줄 수 있다.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Element 등록&lt;/li&gt;
  &lt;li&gt;Lifecycle 콜백&lt;/li&gt;
  &lt;li&gt;Property 관찰&lt;/li&gt;
  &lt;li&gt;Shadow DOM template&lt;/li&gt;
  &lt;li&gt;데이터 바인딩&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;아무것도 설치하지 않아도, 이 섹션에서 당신은 Polymer 라이브러리를 간단히 살펴볼 수 있다. 어떤 샘플 코드에서든지 Edit on Plunker 버튼을 클릭하면 코드를 수정하고 즉시 확인할 수 있다.
아래 예제 중 더 공부하고 싶은 것이 있다면 버튼을 클릭하라.&lt;/p&gt;

&lt;h2 id=&quot;element--register-an-element&quot;&gt;Element 등록하기 (Register an element)&lt;/h2&gt;
&lt;p&gt;Element를 등록하기 위해서는, &lt;code class=&quot;highlighter-rouge&quot;&gt;Polymer.Element&lt;/code&gt; 를 확장한 ES6 클래스를 생성해야한다. 그리고 &lt;code class=&quot;highlighter-rouge&quot;&gt;customElements.define&lt;/code&gt; 메서드를 호출해야한다. 이 메서드는 새로운 element를 브라우저에 등록한다. Element 등록할 때는 element의 이름과 클래스 이름을 같게 만들고 property와 메서드를 추가한다. 커스텀 element의 이름은 &lt;strong&gt;반드시 ASCII 문자로 시작해야 하며 대쉬(-)를 포함해야 한다.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;custom-element.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/components/polymer/polymer-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Define the class for a new element called custom-element&lt;/span&gt;
  &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CustomElement&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;custom-element&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;textContent&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;I'm a custom-element.&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;// Register the new element with the browser&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CustomElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;CustomElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/webcomponentsjs+1.0.0-rc.5/components/webcomponentsjs/webcomponents-loader.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;custom-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;custom-element&amp;gt;&amp;lt;/custom-element&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;이 예제는 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;custom-element&amp;gt;&lt;/code&gt; 를 추가하기 위해서, 그것이 초기화 될 때 lifecycle 콜백을 사용한다. 커스텀 element의 초기화가 끝나면, &lt;code class=&quot;highlighter-rouge&quot;&gt;ready&lt;/code&gt; lifecycle 콜백이 호출된다. 당신은 element 가 생성된 이후에, 단 한번 &lt;code class=&quot;highlighter-rouge&quot;&gt;ready&lt;/code&gt; 콜백을 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/registering-elements&quot;&gt;Learn more : Element Registration&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/registering-elements#lifecycle-callbacks&quot;&gt;Learn more : Lifecycle Callbacks&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;shadow-dom-&quot;&gt;Shadow DOM 추가하기&lt;/h2&gt;
&lt;p&gt;수많은 element는 내부의 DOM nodes를 포함하고 있다. DOM nodes 는 element의 UI와 행동을 수행한다. 당신은 당신의 element에 shadow DOM tree를 생성하기 위해서 Polymer’s DOM 템플릿을 사용할 수 있다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;dom-element.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/components/polymer/polymer-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dom-element&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;I'm a DOM element. This is my shadow DOM!&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DomElement&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;dom-element&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DomElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;DomElement&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/webcomponentsjs+1.0.0-rc.5/components/webcomponentsjs/webcomponents-loader.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dom-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-element&amp;gt;&amp;lt;/dom-element&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/dom-template&quot;&gt;Learn more : DOM Templating&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;shadow-dom--1&quot;&gt;Shadow DOM 조립하기&lt;/h2&gt;
&lt;p&gt;Shadow DOM은 구성을 조작할 수 있도록 해준다. Element의 자식은 분산될 수 있는데, 마치 shadow DOM tree에 삽입된 것처럼 그려진다.
이 예제는 단순한 태그를 생성하는데, 이것은 이미지를 스타일 추가된 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt;로 감싼 태그이다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;picture-frame.html&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/components/polymer/polymer-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;picture-frame&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- scoped CSS for this element --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;style&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;div&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;display&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;inline-block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;background-color&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;#ccc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;border-radius&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;8px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;nl&quot;&gt;padding&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;m&quot;&gt;4px&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/style&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- any children are rendered here --&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;slot&amp;gt;&amp;lt;/slot&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PictureFrame&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;picture-frame&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PictureFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;PictureFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/webcomponentsjs+1.0.0-rc.5/components/webcomponentsjs/webcomponents-loader.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;picture-frame.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;picture-frame&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;img&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://www.polymer-project.org/images/logos/p-logo-32.png&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/picture-frame&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;dom-module&amp;gt;&lt;/code&gt; 내부에서 정의된 CSS는 해당 element의 shadow DOM의 범위에 한한다. 따라서 여기서 정의된 div 규칙도 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;picture-frame&amp;gt;&lt;/code&gt; 내부의 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;div&amp;gt;&lt;/code&gt; 태그에서만 적용된다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/shadow-dom#shadow-dom-and-composition&quot;&gt;Learn more : Composition &amp;amp; Distribution&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;section&quot;&gt;데이터바인딩 사용하기&lt;/h2&gt;
&lt;p&gt;당연하게도, 정적인 shadow DOM을 사용하는 것으로는 충분하지 않다. 당신은 보통 당신의 element가 shadow DOM을 동적으로 업데이트 하기를 원할것이다.&lt;/p&gt;

&lt;p&gt;데이터바인딩은 당신의 element 변화를 빠르게 전달하고 boilerplate 코드를 줄이기에 아주 좋은 방법이다. 당신은 컴포넌트에 작성된 property들을 &lt;code class=&quot;highlighter-rouge&quot;&gt;(double-mustache) 문법을 통해서 바인드할 수 있다.&lt;/code&gt;는 그 괄호 안의 값이 가리키는 property 값에 의해서 대체된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;name-tag.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- import polymer-element --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/components/polymer/polymer-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name-tag&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- bind to the &quot;owner&quot; property --&amp;gt;&lt;/span&gt;
    This is &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&amp;lt;/b&amp;gt;&lt;/span&gt;'s name-tag element.
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NameTag&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;name-tag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;// set this element's owner property&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;owner&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Daniel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    
    &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NameTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;NameTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/webcomponentsjs+1.0.0-rc.5/components/webcomponentsjs/webcomponents-loader.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;name-tag.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;name-tag&amp;gt;&amp;lt;/name-tag&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/data-binding&quot;&gt;Learn more : Data Binding&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;declare-a-property&quot;&gt;프로퍼티의 선언(Declare a property)&lt;/h2&gt;
&lt;p&gt;Property는 element의 공개 API에서 중요한 부분이다. Polymer의 선언된 property는 수많은 공통패턴을 제공한다. 예를들면 기본값을 셋팅하고, 마크업으로부터 property를 설정하고, property 변화를 관찰하는 것 등을 제공한다.
아래 예제는 위 마지막 예제에서 &lt;code class=&quot;highlighter-rouge&quot;&gt;owner&lt;/code&gt; 프로퍼티를 선언한다. 또한 &lt;code class=&quot;highlighter-rouge&quot;&gt;index.html&lt;/code&gt; 마크업으로부터 owner property 설정하는 것을 보여준다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;configurable-name-tag.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/components/polymer/polymer-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;configurable-name-tag&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- bind to the &quot;owner&quot; property --&amp;gt;&lt;/span&gt;
    This is &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;[[owner]]&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;'s name-tag element.
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
  
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConfigurableNameTag&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;configurable-name-tag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      &lt;span class=&quot;c1&quot;&gt;// configure owner property&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Daniel&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ConfigurableNameTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ConfigurableNameTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/webcomponentsjs+1.0.0-rc.5/components/webcomponentsjs/webcomponents-loader.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;configurable-name-tag.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- configure a property from markup by setting
         the corresponding attribute                 --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;configurable-name-tag&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;owner=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Scott&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/configurable-name-tag&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/properties&quot;&gt;Learn more : Declared Properties&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;bind-to-a-property&quot;&gt;프로퍼티 바인딩 하기(Bind to a property)&lt;/h2&gt;
&lt;p&gt;다음 콘텐츠에 덧붙이자면, 당신은 element의 property에 바인딩을 할 수 있다(&lt;code class=&quot;highlighter-rouge&quot;&gt;property-name=&quot;[[binding]]&quot;&lt;/code&gt;을 이용해서). Polymer property는 선택적으로 양방향 바인딩을 지원할 수 있는데, &lt;code class=&quot;highlighter-rouge&quot;&gt;property-name=&quot;&quot;&lt;/code&gt; 과 같이 표현한다.
이 예제는 양방향 바인딩을 사용한다 : 커스텀 element인 &lt;code class=&quot;highlighter-rouge&quot;&gt;iron-input&lt;/code&gt;에 &lt;code class=&quot;highlighter-rouge&quot;&gt;owner&lt;/code&gt; property를 바인딩 해서 사용자 타입에 따라서 업데이트 된다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;editable-name-tag.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/iron-input+polymerelements+:2.0-preview/shadycss+webcomponents+1.0.0-rc.2/components/polymer/polymer-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- import the iron-input element --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/iron-input+polymerelements+:2.0-preview/shadycss+webcomponents+1.0.0-rc.2/components/iron-input/iron-input.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;editable-name-tag&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- bind to the &quot;owner&quot; property --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&lt;/span&gt;This is &lt;span class=&quot;nt&quot;&gt;&amp;lt;b&amp;gt;&lt;/span&gt;[[owner]]&lt;span class=&quot;nt&quot;&gt;&amp;lt;/b&amp;gt;&lt;/span&gt;'s name-tag element.&lt;span class=&quot;nt&quot;&gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    
    &lt;span class=&quot;c&quot;&gt;&amp;lt;!-- iron-input exposes a two-way bindable input value --&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;iron-input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;bind-value=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;input&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;is=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;iron-input&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;placeholder=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Your name here...&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/iron-input&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;

  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditableNameTag&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;editable-name-tag&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;// configure the owner property&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;properties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
          &lt;span class=&quot;na&quot;&gt;owner&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;na&quot;&gt;value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Daniel'&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EditableNameTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EditableNameTag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/webcomponentsjs+1.0.0-rc.5/components/webcomponentsjs/webcomponents-loader.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;editable-name-tag.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;editable-name-tag&amp;gt;&amp;lt;/editable-name-tag&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;strong&gt;Note :&lt;/strong&gt; &lt;code class=&quot;highlighter-rouge&quot;&gt;iron-input&lt;/code&gt; 은 기본태그인 &lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;input&amp;gt;&lt;/code&gt;을 감싸고, 양방향 바인딩과 값 확인(validation)을 제공한다.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;dom-repeat---&quot;&gt;&lt;code class=&quot;highlighter-rouge&quot;&gt;&amp;lt;dom-repeat&amp;gt;&lt;/code&gt; 사용해서 템플릿 반복하기&lt;/h2&gt;
&lt;p&gt;템플릿 반복자(&lt;code class=&quot;highlighter-rouge&quot;&gt;dom-repeat&lt;/code&gt;)는 배열(array)로 바인드하는데 특화된 템플릿이다. 이것은 템플릿의 콘텐츠들을 배열의 항목으로 포함하는 하나의 인스턴스(instance)를 생성한다.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;employee-list.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
18
19
20
21
22
23
24
25
26
27
28
29
30
31
32
33
34
35&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- import polymer-element --&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/components/polymer/polymer-element.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;&amp;lt;!-- import template repeater --&amp;gt;&lt;/span&gt; 
&lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt;  &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/polymer+2.0.0-rc.2/components/polymer/lib/elements/dom-repeat.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;dom-module&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;employee-list&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt; Employee list: &lt;span class=&quot;nt&quot;&gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;template&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;is=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;dom-repeat&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;items=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;First name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;div&amp;gt;&lt;/span&gt;Last name: &lt;span class=&quot;nt&quot;&gt;&amp;lt;span&amp;gt;&amp;lt;/span&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;p&amp;gt;&amp;lt;/p&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/template&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;kr&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EmployeeList&lt;/span&gt; &lt;span class=&quot;kr&quot;&gt;extends&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;Polymer&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Element&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;kr&quot;&gt;static&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;get&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;employee-list&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
      
      &lt;span class=&quot;c1&quot;&gt;// set this element's employees property&lt;/span&gt;
      &lt;span class=&quot;nx&quot;&gt;constructor&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kr&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;employees&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Bob'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Li'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Ayesha'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Johnson'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Fatma'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Kumari'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt;
          &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;first&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Tony'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;last&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'Morelli'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;];&lt;/span&gt; 
      &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;customElements&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;define&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EmployeeList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;is&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;EmployeeList&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;&amp;lt;/dom-module&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;index.html&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;table style=&quot;border-spacing: 0&quot;&gt;&lt;tbody&gt;&lt;tr&gt;&lt;td class=&quot;gutter gl&quot; style=&quot;text-align: right&quot;&gt;&lt;pre class=&quot;lineno&quot;&gt;1
2
3
4
5
6
7
8
9
10&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;!DOCTYPE html&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;html&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;lang=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;en&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;https://polygit.org/webcomponentsjs+1.0.0-rc.5/components/webcomponentsjs/webcomponents-loader.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;link&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;rel=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;import&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;href=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;employee-list.html&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;employee-list&amp;gt;&amp;lt;/employee-list&amp;gt;&lt;/span&gt;
  &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/tbody&gt;&lt;/table&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://www.polymer-project.org/2.0/docs/devguide/templates&quot;&gt;Learn more : Template Repeater&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Sun, 16 Apr 2017 12:19:20 +0900</pubDate>
        <link>http://golch.gitub.io/polymer/2017/04/16/Quick-tour-of-Polymer.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/polymer/2017/04/16/Quick-tour-of-Polymer.html</guid>
        
        
        <category>polymer</category>
        
      </item>
    
      <item>
        <title>Django MySQL 연동하기</title>
        <description>&lt;p&gt;Django Tutorial 을 진행하면 기본 database 가 SQLite 로 되어있는 것을 볼 수 있다. 보통 웹사이트를 만들 때에 많이 사용하는 MySQL로 database 를 바꾸는 방법을 알아보자.&lt;br /&gt;
&lt;a href=&quot;https://docs.djangoproject.com/en/1.10/intro/tutorial02/&quot; target=&quot;_blank&quot;&gt;원문참고&lt;/a&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;PyMySQL 라이브러리 사용&lt;br /&gt;
django 를 사용할때 MySQLdb 이걸 이용해서 DB연결을 하는 것이 보통이나 이 라이브러리가 python 버전에 영향을 받는 것 같다.(python3.x 지원을 안하는듯..)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;따라서 MySQL 연동을 위해서는 다른 라이브러리를 사용해야 한다.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;pip install PyMySQL&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;위 명령어로 설치하자. &lt;a href=&quot;https://github.com/PyMySQL/PyMySQL&quot; target=&quot;_blank&quot;&gt;PyMySQL 참고&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;** 참고 : MySQL의 설치는 딱히 설명하지 않고 넘어간다.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;settings.py&lt;br /&gt;
django 로 돌아와서 settings.py 파일의 DATABASES 부분을 아래와 같이 설정한다.&lt;/li&gt;
&lt;/ol&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-python&quot; data-lang=&quot;python&quot;&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;pymysql&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;pymysql&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;install_as_MySQLdb&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;


&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;중략&lt;/span&gt;


&lt;span class=&quot;c&quot;&gt;#MySQL&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;DATABASES&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;'default'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'ENGINE'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'django.db.backends.mysql'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'NAME'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'inform_place'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'USER'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'django-test'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'PASSWORD'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'1111'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'HOST'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'localhost'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;'PORT'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'3306'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;이렇게 코딩한 후 다시 실행해봐야 한다. 단, migration 하는 것을 잊지말자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python manage.py migrate&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;에러 없이 잘 동작한다면 서버를 올려보자.&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-shell&quot; data-lang=&quot;shell&quot;&gt;&lt;span class=&quot;gp&quot;&gt;$ &lt;/span&gt;python manage.py runserver&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;markdown 으로 포스팅 첨 해보는데 생각보다 편하다.&lt;br /&gt;
우분투나 맥이나 아무데서나 쉽게할 수 있는듯..&lt;/p&gt;

</description>
        <pubDate>Fri, 20 Jan 2017 14:39:20 +0900</pubDate>
        <link>http://golch.gitub.io/django/2017/01/20/Django-MySQL-%EC%97%B0%EB%8F%99.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/django/2017/01/20/Django-MySQL-%EC%97%B0%EB%8F%99.html</guid>
        
        
        <category>django</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;http://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Fri, 23 Sep 2016 13:02:20 +0900</pubDate>
        <link>http://golch.gitub.io/jekyll/update/2016/09/23/welcome-to-jekyll.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/jekyll/update/2016/09/23/welcome-to-jekyll.html</guid>
        
        
        <category>jekyll</category>
        
        <category>update</category>
        
      </item>
    
      <item>
        <title>[angularJS] 책 “프로 angularJS” 실습 #2</title>
        <description>&lt;p&gt;지난 포스팅을 통해서 샘플 웹사이트가 구동 되었다.&lt;br /&gt;
참고 : &lt;a href=&quot;https://golch51.wordpress.com/2016/04/27/angularjs-%ec%b1%85-%ed%94%84%eb%a1%9c-angularjs-%ec%8b%a4%ec%8a%b5-1/&quot;&gt;https://golch51.wordpress.com/2016/04/27/angularjs-책-프로-angularjs-실습-1/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이제 데이터를 입력해야 한다. 아래 그림처럼 속성을 생성하자.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://golch51.files.wordpress.com/2016/05/6b4634e2-694f-46d7-8c1a-67166d5dc589.png&quot;&gt;&lt;img src=&quot;/assets/6b4634e2-694f-46d7-8c1a-67166d5dc589.png&quot; alt=&quot;6B4634E2-694F-46D7-8C1A-67166D5DC589&quot; width=&quot;660&quot; height=&quot;508&quot; class=&quot;alignnone size-full wp-image-453&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;속성 생성 완료 후 좌측 상단의 DATA를 클릭하여 아래와 같이 데이터를 입력한다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://golch51.files.wordpress.com/2016/05/a43f3fe6-5231-495b-b2e9-45987bb3bb4a.png&quot;&gt;&lt;img src=&quot;/assets/a43f3fe6-5231-495b-b2e9-45987bb3bb4a.png&quot; alt=&quot;A43F3FE6-5231-495B-B2E9-45987BB3BB4A&quot; width=&quot;660&quot; height=&quot;413&quot; class=&quot;alignnone size-full wp-image-454&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;여기까지 입력이 완료되었다면, 이제 본격적으로 angularjs 어플리케이션을 만들어볼 차례이다. 먼저 디렉토리 구조부터 잡아보자. 이 구조는 책에 나온 그대로 만들어 보았다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://golch51.files.wordpress.com/2016/05/73f30c2e-634b-4b16-8ac4-b338393d0576.png&quot;&gt;&lt;img src=&quot;/assets/73f30c2e-634b-4b16-8ac4-b338393d0576.png&quot; alt=&quot;73F30C2E-634B-4B16-8AC4-B338393D0576&quot; width=&quot;434&quot; height=&quot;137&quot; class=&quot;alignnone size-full wp-image-455&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;angular-1.5.5 폴더는 angularjs를 다운로드 한 폴더이다. 본 프로젝트와는 관련이 없으니 무시해도 된다. bootstrap- 폴더 역시 무시해도 되는 폴더이다. 오른쪽에 하위폴더가 중요한데, angularjs 폴더는 지금부터 살펴볼 클라이언트 부분 파일들이 모여있다. node_server는 nodejs 서버가 있는 폴더이고, sportstore 는 deployd가 설치된 폴더이다. 책을 보고 나름의 구조를 만들어도 괜찮지만 혹시 이런것 때문에 진도를 못나가는 사람이 있을까봐 적어놓는다.&lt;/p&gt;
&lt;p&gt;자 이제 nodejs 서버를 구동해야 한다. 먼저 아래와 같이 server.js 파일을 만들자.&lt;/p&gt;
&lt;p&gt;[code lang=text]&lt;br /&gt;
var connect = require(&amp;#039;connect&amp;#039;),&lt;br /&gt;
    serveStatic = require(&amp;#039;serve-static&amp;#039;);&lt;/p&gt;
&lt;p&gt;var app = connect();&lt;/p&gt;
&lt;p&gt;app.use(serveStatic(&amp;quot;../angularjs&amp;quot;));&lt;br /&gt;
app.listen(5000);&lt;br /&gt;
[/code]&lt;/p&gt;
&lt;p&gt;이 파일은 node_server폴더에 넣는다. 그리고 터미널에서 node server.js 실행을 하면 서버가 구동된다.&lt;br /&gt;
그리고 아래의 app.html 파일을 만든다. 이 파일은 angularjs 폴더에 넣어야 한다.&lt;/p&gt;
&lt;p&gt;[code lang=text]&lt;br /&gt;
&amp;lt;!DOCTYPE html&amp;gt;&lt;br /&gt;
&amp;lt;html ng-app=&amp;quot;sportsStore&amp;quot;&amp;gt;&lt;br /&gt;
&amp;lt;head&amp;gt;&lt;br /&gt;
  &amp;lt;title&amp;gt;SportsStore&amp;lt;/title&amp;gt;&lt;br /&gt;
  &amp;lt;a href=&amp;quot;http://angular.js&amp;quot;&amp;gt;http://angular.js&amp;lt;/a&amp;gt;&lt;br /&gt;
  &amp;lt;link href=&amp;quot;bootstrap.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;&lt;br /&gt;
  &amp;lt;link href=&amp;quot;bootstrap-theme.css&amp;quot; rel=&amp;quot;stylesheet&amp;quot;/&amp;gt;&lt;/p&gt;
&lt;p&gt;    angular.module(&amp;quot;sportsStore&amp;quot;,[]);&lt;/p&gt;
&lt;p&gt;&amp;lt;/head&amp;gt;&lt;br /&gt;
&amp;lt;body&amp;gt;&lt;br /&gt;
  &amp;lt;div class=&amp;quot;navbar navbar-inverse&amp;quot;&amp;gt;&lt;br /&gt;
    &amp;lt;a class=&amp;quot;navbar-brand&amp;quot; href=&amp;quot;#&amp;quot;&amp;gt;SPORTS STORE&amp;lt;/a&amp;gt;&lt;br /&gt;
  &amp;lt;/div&amp;gt;&lt;br /&gt;
  &amp;lt;div class=&amp;quot;panel panel-default row&amp;quot;&amp;gt;&lt;br /&gt;
    &amp;lt;div class=&amp;quot;col-xs-3&amp;quot;&amp;gt;&lt;br /&gt;
      Categories go here&lt;br /&gt;
    &amp;lt;/div&amp;gt;&lt;br /&gt;
    &amp;lt;div class=&amp;quot;col-xs-8&amp;quot;&amp;gt;&lt;br /&gt;
      Products go here&lt;br /&gt;
    &amp;lt;/div&amp;gt;&lt;br /&gt;
  &amp;lt;/div&amp;gt;&lt;br /&gt;
&amp;lt;/body&amp;gt;&lt;/p&gt;
&lt;p&gt;&amp;lt;/html&amp;gt;&lt;br /&gt;
[/code]&lt;/p&gt;
&lt;p&gt;그리고 웹브라우저에서 loaclhost:5000/app.html 이 주소로 접속하면 아래와 같이 서버가 정상적으로 구동되는 것을 확인할 수 있다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://golch51.files.wordpress.com/2016/05/cfe60f64-00b0-4d4a-8a6c-e5e6781e50db.png&quot;&gt;&lt;img src=&quot;/assets/cfe60f64-00b0-4d4a-8a6c-e5e6781e50db.png&quot; alt=&quot;CFE60F64-00B0-4D4A-8A6C-E5E6781E50DB&quot; width=&quot;483&quot; height=&quot;175&quot; class=&quot;alignnone size-full wp-image-456&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;아직 책 뒷부분은 읽어보지 않아서 어떤 방식으로 진행될지 잘 모르겠으나, 아마도 우리의 프로젝트는 nodejs서버 위에 angularjs로 클라이언트를 만드는 것이고, deployd서버는 데이터를 제공하는 용도로만 사용할 것 같다.&lt;/p&gt;
</description>
        <pubDate>Mon, 02 May 2016 16:21:07 +0900</pubDate>
        <link>http://golch.gitub.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/2016/05/02/angularjs-ec-b1-85-ed-94-84-eb-a1-9c-angularjs-ec-8b-a4-ec-8a-b5-2.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/2016/05/02/angularjs-ec-b1-85-ed-94-84-eb-a1-9c-angularjs-ec-8b-a4-ec-8a-b5-2.html</guid>
        
        <category>adam freeman</category>
        
        <category>angularjs</category>
        
        <category>book review</category>
        
        <category>프로 angularjs</category>
        
        <category>javascript</category>
        
        
        <category>프로그래밍</category>
        
      </item>
    
      <item>
        <title>[angularJS] 책 &quot;프로 angularJS&quot; 실습 #1</title>
        <description>&lt;p&gt;자바 스크립트 공부의 일환으로 클라이언트 프레임워크인 angularJS 를 공부하기로 했다. 몇달간 개발쪽에 손을 놓고있다가 새로 공부하는거라 두근두근하다. 이리저리 웹서핑을 해보았는데 그나마 유용한 사이트는 2군데 정도 있는듯 하다.&lt;br /&gt;
https://www.angularjs.org/ (angularjs 공식사이트)&lt;br /&gt;
http://www.w3schools.com/angular/default.asp (w3cscools.com)&lt;/p&gt;
&lt;p&gt;좋기는 한데 둘다 영어라서 읽는데 너무 오래걸린다. 그래서 먼저 공부해본 친구에게 책을 추천받았다. &quot;프로 angularJS&quot;라는 책인데 저자인 애덤 프리먼은 이 책 이외에도 &quot;프로 Jquery&quot;, &quot;프로 asp.net&quot;등 여러 권을 집필한 사람이다. 이쪽으로는 꽤 유명한 분인듯..&lt;/p&gt;
&lt;p&gt;이 포스팅은 책에 있는 실습을 직접 해보고 정리하는 목적으로 쓰여질 예정이다. 혹시라도 출판사나 저자에게 이 포스팅이 불이익이 된다면 언제든 삭제할 용의가 있다.&lt;/p&gt;
&lt;p&gt;자 그럼 첫 번째로 개발환경을 셋팅해보자. 책에서 알려주는대로 제일 먼저 nodejs를 설치해야 한다. 서버를 nodejs로 만들건 아니지만, 자바스크립트 애플리케이션을 개발하는 범용적인 프레임워크 기능을 제공한다고 책에 나와있다. 참고로 초반에 나오는 javascript 전반적인 내용과 angularjs의 이론적인 부분은 스킵하였다. 본격적인 실습에 들어가는 6장의 내용부터 담는 것이니 앞부분이 궁금하다면 책을 사서 보는 것이 좋겠다.(출판업계의 발전을 위해서..)&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;https://nodejs.org/ko/ 여기서 nodejs를 다운로드해서 설치하자(무려 한글번역). 버튼을 클릭하면 내 PC의 OS에 맞는 파일이 다운로드 되고, 설치하는 법은 따로 설명하지 않겠다.(이정도는 다 되겠지..)&lt;/li&gt;
&lt;li&gt;다음은 angularjs 파일을 다운로드 한다. https://www.angularjs.org/&lt;br /&gt;
주의할 점은 다운로드 창에서 stable 과 uncompressed 옵션을 반드시 체크하자. 다운로드 버튼을 누르면 브라우저의 새 탭에 js 파일이 열린다. 이 내용을 복사해서 새 파일(angular.js)로 저장하자.&lt;/li&gt;
&lt;li&gt;deployd 설치 http://deployd.com/&lt;br /&gt;
아래에서 본인 PC의 OS에 맞게 설치하면 된다.&lt;br /&gt;
&lt;a href=&quot;https://golch51.files.wordpress.com/2016/04/ecbaa1ecb2981111.png&quot;&gt;&lt;img src=&quot;/assets/ecbaa1ecb2981111.png&quot; alt=&quot;캡처111&quot; width=&quot;660&quot; height=&quot;392&quot; class=&quot;alignnone size-full wp-image-447&quot; /&gt;&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;나는 Mac OS 니까 npm install 로 설치하고, mongoDB를 따로 설치하였다.&lt;/p&gt;
&lt;p&gt;여기까지 설치하고 나서 작업할 디렉토리를 정한 후 터미널을 열고 그 디렉토리로 이동한다. 그리고&lt;br /&gt;
dpd create sportsstore 를 입력한다.&lt;/p&gt;
&lt;p&gt;그러면 폴더와 파일들이 막 생성되고, 다시 dpd -p 5500 sportsstore/app.dpd dashboard 이렇게 입력하면 로컬 서버가 시작된다.&lt;/p&gt;
&lt;p&gt;브라우저에서 localhost:5500/dashboard/ 를 입력하면 아래 그림과 같은 웹 어플리케이션이 구동되는 것을 볼수 있다.&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://golch51.files.wordpress.com/2016/04/pasted-image-at-2016_04_27-04_56-pm.png&quot;&gt;&lt;img src=&quot;/assets/pasted-image-at-2016_04_27-04_56-pm.png&quot; alt=&quot;Pasted image at 2016_04_27 04_56 PM&quot; width=&quot;660&quot; height=&quot;413&quot; class=&quot;alignnone size-full wp-image-449&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;휴. 정리하면서 하려니 진도도 느리고 힘들다. 오늘은 일단 여기까지...&lt;/p&gt;
</description>
        <pubDate>Wed, 27 Apr 2016 16:59:10 +0900</pubDate>
        <link>http://golch.gitub.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/%EC%BB%B4%ED%93%A8%ED%84%B0/2016/04/27/angularjs-ec-b1-85-ed-94-84-eb-a1-9c-angularjs-ec-8b-a4-ec-8a-b5-1.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/%EC%BB%B4%ED%93%A8%ED%84%B0/2016/04/27/angularjs-ec-b1-85-ed-94-84-eb-a1-9c-angularjs-ec-8b-a4-ec-8a-b5-1.html</guid>
        
        <category>adam freeman</category>
        
        <category>angularjs</category>
        
        <category>book review</category>
        
        <category>프로 angularjs</category>
        
        <category>javascript</category>
        
        
        <category>프로그래밍</category>
        
        <category>컴퓨터</category>
        
      </item>
    
      <item>
        <title>밴드코로나 in JW메리어트 동대문</title>
        <description>&lt;p&gt;와인앤버스커 밴드코로나 공연&lt;br /&gt;
&lt;a href=&quot;https://golch51.files.wordpress.com/2016/04/dsc_0028.jpg&quot; rel=&quot;attachment wp-att-434&quot;&gt;&lt;img src=&quot;/assets/dsc_0028.jpg&quot; alt=&quot;DSC_0028&quot; width=&quot;474&quot; height=&quot;314&quot; class=&quot;alignnone size-full wp-image-434&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
</description>
        <pubDate>Fri, 01 Apr 2016 01:07:28 +0900</pubDate>
        <link>http://golch.gitub.io/%EC%82%AC%EC%A7%84/2016/04/01/eb-b0-b4-eb-93-9c-ec-bd-94-eb-a1-9c-eb-82-98-in-jw-eb-a9-94-eb-a6-ac-ec-96-b4-ed-8a-b8-eb-8f-99-eb-8c-80-eb-ac-b8.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/%EC%82%AC%EC%A7%84/2016/04/01/eb-b0-b4-eb-93-9c-ec-bd-94-eb-a1-9c-eb-82-98-in-jw-eb-a9-94-eb-a6-ac-ec-96-b4-ed-8a-b8-eb-8f-99-eb-8c-80-eb-ac-b8.html</guid>
        
        
        <category>사진</category>
        
      </item>
    
      <item>
        <title>Ubuntu 14.04 설치함</title>
        <description>&lt;p&gt;우분투를 설치했다!!!&lt;/p&gt;
&lt;p&gt;업무용으로 이걸 사용할 수 있을지 아직 확신은 없어서 windows7 과 멀티부팅이 가능하도록 만들었다.&lt;/p&gt;
&lt;p&gt;업무를 위한 JAVA 개발환경 설치시 windows 와 다르게 문제가 발생한 부분을 메모해 둔다.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;maven 을 사용하고 있는데 maven resolving dependency 라고 뭔가를 계속 로딩하고 있다....... 왜 그런가 살펴보았더니 기본값으로 설정된 maven repository 위치에 디렉토리 및 파일 생성 권한이 없다. 리눅스 계열에서만 발생할 문제 ㅋㅋ. 그래서 maven repository 위치를 변경하니 해결됨!&lt;/li&gt;
&lt;li&gt;lombok 플러그인 설치(IDE) ...... 실행하면 실행은 잘 되는데 자꾸 에러라고 빨갛게 표시가 된다. 다운받은 프로젝트 소스에 라이브러리로 lombok은 들어있는데 IDE 에 플러그인을 설치 안해서 발생하는 문제. 참고로 IDE는 intellij 를 사용중이다. 플러그인 설치하니 정상동작함.&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&amp;nbsp;&lt;/p&gt;
&lt;p&gt;예전에 우분투 12.04 시절에 설치해서 사용해봤었는데 한글깨짐 및 IDE 문제점 등으로 도저히 못쓰겠다고 판단, 일주일만에 지운적이 있었다. 그런데 이번에 설치해보니 windows 대비 속도도 빠르고, (UI 에 대한 호불호는 나뉠 수 있겠다) 설치도 간편하고, 한글도 잘 지원되는 등 많이 개선되었다. 사용하는 어플리케이션 들이 멀티플랫폼을 많이 지원하는 것도 하나의 요인인듯 하다. 그래서 일부 MS-Office 가 필요한 상황을 제외하고 작업용도로 이번에 사용해보려고 한다.&lt;/p&gt;
</description>
        <pubDate>Thu, 24 Dec 2015 14:15:54 +0900</pubDate>
        <link>http://golch.gitub.io/ubuntu/2015/12/24/ubuntu-14-04-ec-84-a4-ec-b9-98-ed-95-a8.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/ubuntu/2015/12/24/ubuntu-14-04-ec-84-a4-ec-b9-98-ed-95-a8.html</guid>
        
        <category>우분투</category>
        
        <category>JAVA</category>
        
        <category>linux</category>
        
        <category>lombok</category>
        
        <category>maven</category>
        
        <category>ubuntu</category>
        
        
        <category>ubuntu</category>
        
      </item>
    
      <item>
        <title>알고리즘 공부 #8</title>
        <description>&lt;p&gt;Algospot 문제 PICNIC&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://algospot.com/judge/problem/read/PICNIC&quot;&gt;https://algospot.com/judge/problem/read/PICNIC&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;이번에는 튜토리얼 문제가 아닌 '알고리즘 문제 해결 전략’ 이라는 책에 수록된 문제를 풀어보았다. 이 다음에 포스팅 하게 될 NQUEEN 이라는 문제를 풀다가 막혀서 한 단계 쉬운 비슷한 문제에 도전을 하게 된 것. 책의 해설도 필요한 상황이었고 이런 탐색, 경우의 수 류의 문제를 해결하는 능력을 좀더 키우기 위한 선택이었다.&lt;/p&gt;
&lt;p&gt;PICNIC(소풍) 문제는 아이들이 소풍을 가기 위해 짝을 짓는 경우의 수를 구하는 문제이다. 서로 친구인지 아닌지를 가늠하는 것이 포인트인데 이런 문제를 어떻게 풀어야 할지 책에 자세히 해설이 되어있다. 0번 아이부터 시작해서 친구인지 아닌지 검사하는 코드를 만들어야 한다. 이렇게 일일히 검사하는 것을 완전탐색 이라고 한다.&lt;/p&gt;
&lt;p&gt;책에 나와있는 풀이를 보고 문제를 해결하였는데, 완성된 코드를 보면서 배운 점들이 있다.&lt;br /&gt;
1. 친구인지 아닌지?를 판별하는 부분을 areFriends[][] 라는 boolean형의 2차원 배열로 만들었다. 이렇게 만들면 단순히 입력으로 받은 친구(여기서는 정수형)를 담아주기만 해도 다른 코드 없이 판별이 가능하다. 단, 순서를 항상 숫자가 작은 것을 앞에 넣어주어야 한다.&lt;br /&gt;
2. 처리하고 넘어간 아이는 taken[] 이라는 boolean형의 배열로 만들어서 처리한다. 이것 역시 책을 보기 전에는 생각해내지 못할만한 것이었다. 내가 혼자서 구현했다면 아마 좀더 무식한 방법으로 만들었을 것 같다.&lt;br /&gt;
3. 질문, 혹은 처리해야 하는 부분을 함수로 따로 구현한다. 이것은 java와 같은 OOP 언어라면 당연히 해야 할 일이다. 그러나 문제를 풀다보면 무식하게 main함수 안에 모든 로직을 우겨넣고 있는 나를 발견하게 된다 ㅠㅠ. 꼭 이 알고리즘 공부가 아니더라도 개발자로서 어떤 프로그램을 설계하고 코딩할 때 자연스럽게 함수를 만들고 필요하면 클래스도 만드는 능력이 시급하게 필요한듯...&lt;/p&gt;
&lt;p&gt;결국 알고리즘을 공부하기 위해서 이 책을 보고, 알고스팟 사이트에서 문제를 푸는 것들이 전반적인 개발자의 기초체력(?)에 큰 도움이 됨을 몸으로 체득하고 있다. 다음 문제는 제발 혼자서 풀 수 있기를….&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://golch51.files.wordpress.com/2015/04/e76dd4c0ae51c36d98aa3d807e559a28.png&quot;&gt;&lt;img src=&quot;/assets/e76dd4c0ae51c36d98aa3d807e559a28.png&quot; alt=&quot;&quot; width=&quot;687&quot; height=&quot;620&quot; class=&quot;alignnone size-full wp-image-403&quot; /&gt;&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;암튼 책의 해설 덕분에 한방에 해결!ㅋㅋㅋ&lt;br /&gt;
다음에는 막혔던 NQUEEN 에 도전합니다.&lt;/p&gt;
&lt;p&gt;[code lang=text]&lt;br /&gt;
import java.util.Scanner;&lt;/p&gt;
&lt;p&gt;public class Main {&lt;/p&gt;
&lt;p&gt;    int n;&lt;br /&gt;
    boolean[][] areFriends = new boolean[10][10];&lt;br /&gt;
    //taken[i] = i 번째 학생이 짝을 이미 찾았으면 true, 아니면 false&lt;/p&gt;
&lt;p&gt;    int countPairings(boolean taken[],boolean[][] areFriends){&lt;br /&gt;
        //남은 학생들 중 가장 번호가 빠른 학생을 찾는다.&lt;br /&gt;
        int firstFree = -1;&lt;/p&gt;
&lt;p&gt;        for(int i=0; i&amp;lt;n; ++i){&lt;br /&gt;
            if(!taken[i]){&lt;br /&gt;
                firstFree = i;&lt;br /&gt;
                break;&lt;br /&gt;
            }&lt;br /&gt;
        }&lt;/p&gt;
&lt;p&gt;        //기저 사례 : 모든 학생이 짝을 찾았으면 한 가지 방법을 찾았으니 종료한다.&lt;br /&gt;
        if(firstFree == -1){&lt;br /&gt;
            return 1;&lt;br /&gt;
        }&lt;/p&gt;
&lt;p&gt;        int ret = 0;&lt;/p&gt;
&lt;p&gt;        //이 학생과 짝지을 학생을 결정한다.&lt;br /&gt;
        for(int pairWith = firstFree + 1; pairWith &amp;lt; n; ++pairWith){&lt;/p&gt;
&lt;p&gt;            if(!taken[pairWith] &amp;amp;&amp;amp; areFriends[firstFree][pairWith]){&lt;br /&gt;
                taken[firstFree] = taken[pairWith] = true;&lt;br /&gt;
                ret += countPairings(taken,areFriends);&lt;br /&gt;
                taken[firstFree] = taken[pairWith] = false;&lt;br /&gt;
            }&lt;br /&gt;
        }&lt;/p&gt;
&lt;p&gt;        return ret;&lt;br /&gt;
    }&lt;/p&gt;
&lt;p&gt;    public static void main(String[] args){&lt;br /&gt;
        Scanner sc = new Scanner(System.in);&lt;br /&gt;
        int T = sc.nextInt();&lt;br /&gt;
        int[] n = new int[T];//학생의 수.(2~10)&lt;br /&gt;
        int[] m = new int[T];//친구 쌍의 수.(0~ n(n-1)/2)&lt;br /&gt;
        int tmp = 0;&lt;br /&gt;
        int[] answer = new int[T];&lt;/p&gt;
&lt;p&gt;        if(T&amp;lt;=50){&lt;br /&gt;
            for(int i=0; i&amp;lt;T; i++){&lt;/p&gt;
&lt;p&gt;                n[i] = sc.nextInt();&lt;br /&gt;
                m[i] = sc.nextInt();&lt;/p&gt;
&lt;p&gt;                Main obj = new Main();&lt;br /&gt;
                boolean[] taken = new boolean[n[i]];&lt;br /&gt;
                obj.n = n[i];&lt;br /&gt;
                int friend1 = 0, friend2 = 0;&lt;/p&gt;
&lt;p&gt;                if( (2&amp;lt;=n[i]) &amp;amp;&amp;amp; (n[i]&amp;lt;=10) ){&lt;br /&gt;
                    if( (0&amp;lt;=m[i]) &amp;amp;&amp;amp; (m[i] &amp;lt;= n[i] * (n[i] -1) / 2) ){&lt;br /&gt;
                        for(int j=0; j friend2){&lt;br /&gt;
                                tmp = friend1;&lt;br /&gt;
                                friend1 = friend2;&lt;br /&gt;
                                friend2 = tmp;&lt;br /&gt;
                            }&lt;/p&gt;
&lt;p&gt;                            obj.areFriends[friend1][friend2] = true;&lt;br /&gt;
                        }&lt;br /&gt;
                        answer[i] = obj.countPairings(taken,obj.areFriends);&lt;br /&gt;
                    }&lt;br /&gt;
                }&lt;br /&gt;
            }&lt;/p&gt;
&lt;p&gt;            for(int i=0; i&amp;lt;T; i++){&lt;br /&gt;
                System.out.println(answer[i]);&lt;br /&gt;
            }&lt;/p&gt;
&lt;p&gt;        }&lt;/p&gt;
&lt;p&gt;    }&lt;br /&gt;
}&lt;/p&gt;
&lt;p&gt;[/code]&lt;/p&gt;
&lt;table cellspacing=&quot;0&quot; cellpadding=&quot;0&quot; width=&quot;100%&quot;&gt;
&lt;tr&gt;
&lt;td&gt;이 글은 Evernote에서 작성되었습니다. Evernote는 하나의 업무 공간입니다. &lt;a href=&quot;https://www.evernote.com/getit?email_name=emailNote&amp;amp;email_guid=49ca88ff-a174-457e-8ce4-af2240358799&amp;amp;email_link=download_app&quot;&gt;Evernote를 다운로드하세요&lt;/a&gt;.&lt;/td&gt;
&lt;/tr&gt;
&lt;/table&gt;
</description>
        <pubDate>Thu, 09 Apr 2015 17:57:19 +0900</pubDate>
        <link>http://golch.gitub.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/2015/04/09/ec-95-8c-ea-b3-a0-eb-a6-ac-ec-a6-98-ea-b3-b5-eb-b6-80-8.html</link>
        <guid isPermaLink="true">http://golch.gitub.io/%ED%94%84%EB%A1%9C%EA%B7%B8%EB%9E%98%EB%B0%8D/2015/04/09/ec-95-8c-ea-b3-a0-eb-a6-ac-ec-a6-98-ea-b3-b5-eb-b6-80-8.html</guid>
        
        <category>algospot</category>
        
        <category>featured</category>
        
        <category>알고리즘</category>
        
        <category>JAVA</category>
        
        
        <category>프로그래밍</category>
        
      </item>
    
  </channel>
</rss>
